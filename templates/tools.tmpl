{{template "header"}}

<section class=container>
<h2>Tools</h2>
<p>
I've written a handful of open source tools. Most are MIT licensed.
You can find the full selection on <a href="https://github.com/tomnomnom/">my GitHub profile</a>,
but here's some of them that stand out for one reason or another.
</p>
</section>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/gron>gron</a></h2>
	<p>
		My most successful open source project.
		<a href=https://github.com/tomnomnom/gron>gron</a> is a tool to make it easier to understand big blobs of <abrr title="JavaScript Object Notation">JSON</abbr>.
		It works by turning JSON into a series of discrete assignments so that you can grep for what you want and see the full 'path' to the values you find.
		You can turn filtered output <a href=https://github.com/tomnomnom/gron#ungronning>back into JSON</a> too.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/meg>meg</a></h2>
	<p>
		A common tactic when pentesting web applications is to brute-force files and directories. I'm not a fan of flooding servers
		with lots of traffic, so I wrote <a href=https://github.com/tomnomnom/meg>meg</a> to look for one thing in lots of places instead of lots of things in one place.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/unfurl>unfurl</a></h2>
	<p>
		I wrote <a href=https://github.com/tomnomnom/unfurl>unfurl</a> because I was fed up of writing the same regular expressions over and over again to pull bits out of URLs.
		It parses URLs provided on stdin and lets you specify the parts of the URL you want to pull out. It supports custom output formats by using a printf-style set of format
		specifiers.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/comb>comb</a></h2>
	<p>
		I wrote <a href=https://github.com/tomnomnom/comb>comb</a> because I often found myself writing pretty much the same nested loops
		in bash to output every permutation of the lines in two files. Having a dedicated tool speeds things up a lot.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/waybackurls>waybackurls</a></h2>
	<p>
		Archive.org's <a href=https://archive.org/web/>Wayback Machine</a> is a fantastic resource for mapping web applications. I wrote
		<a href=https://github.com/tomnomnom/waybackurls>waybackurls</a> to fetch all of the URLs that the Wayback Machine
		knows about for a set of domains.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/gf>gf</a></h2>
	<p>
		<a href=https://github.com/tomnomnom/gf>gf</a> is a simple wrapper around grep to manage sets of complex and commonly used patterns.
		I use it when auditing codebases or examining the output of <a href=https://github.com/tomnomnom/meg>meg</a>.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/rawhttp>rawhttp</a></h2>
	<p>
		In the process of writing <a href=https://github.com/tomnomnom/meg>meg</a> I found myself needing to send requests
		that had malformed escape sequences and other unusual payloads that Go's HTTP library did not support. I wrote the
		<a href=https://github.com/tomnomnom/rawhttp>rawhttp</a> package to give me more fine-grained control over
		HTTP request.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/linkheader>linkheader</a></h2>
	<p>
		Link headers are often used in HTTP APIs for pagination, and parsing them turns out to not be all that easy.
		I wrote the <a href=https://github.com/tomnomnom/linkheader>linkheader</a> Go package to do the heavy lifting.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/phpwol>phpwol</a></h2>
	<p>
		Wake On LAN is a way to make computers power on by sending them a 'Magic' packet over a local network.
		<a href=https://github.com/tomnomnom/phpwol>phpwol</a> is a PHP library to do just that.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/symwatch>symwatch</a></h2>
	<p>
		It's a fairly common pattern to use a symlink to point to the current version of a codebase.
		Sometimes it's neccesary to restart processes or clear caches when the version of a codebase changes, so
		I wrote <a href=https://github.com/tomnomnom/symwatch>symwatch</a> to poll a symlink for changes and run
		a command when they happen.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/xtermcolor>xtermcolor</a></h2>
	<p>
		A while ago I had a need to figure out which xterm color code was the closest to a 24bit color, so I wrote
		a Go palette and command line tool called <a href=https://github.com/tomnomnom/xtermcolor>xtermcolor</a> to
		do it for me.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/globwatch>globwatch</a></h2>
	<p>
		<a href=https://github.com/tomnomnom/globwatch>globwatch</a> is a Go package I wrote to watch a glob
		pattern (e.g. *.log) and emit 'events' when new files match the pattern, files are deleted,
		or truncated.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/phargs>phargs</a></h2>
	<p>
		Several years ago I found myself writing quite a few command line tools in PHP, and I noticed I was
		writing very similar code in every tool to process arguments, output things as tables etc. I wrote
		<a href=https://github.com/tomnomnom/phargs>phargs</a> as a little toolkit to make those kinds of
		tasks easier.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/flatclass>flatclass</a></h2>
	<p>
		<a href=https://github.com/tomnomnom/flatclass>flatclass</a> is a debugging tool I wrote to make it
		easier to read and debug PHP classes with deep inheritance trees. It uses reflection to 'flatten'
		an inheritance tree by recursively copying parent methods into the target class.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/httprobe>httprobe</a></h2>
	<p>
		<a href=https://github.com/tomnomnom/httprobe>httprobe</a> takes a list of domains on stdin and checks
		for listening HTTP servers. It defaults to looking for HTTP on port 80 and HTTPS on port 443, but you
		can specify additional ports to try too.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/concurl>concurl</a></h2>
	<p>
		Although meg is useful, it lacks some of the options that curl does. I wrote <a href=https://github.com/tomnomnom/concurl>concurl</a>
		for the situations where I need a bit more of the power that curl offers. Really it's just a wrapper around running concurrent curl
		processes to fetch the URLs provided on stdin.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/eater-cpu>eater-cpu</a></h2>
	<p>
		If you want to know more about how computers work, you should watch Ben Eater's fantastic
		<a href="https://www.youtube.com/watch?v=HyznrdDSSGM&list=PLowKtXNTBypGqImE405J2565dvjafglHU">8-Bit Breadboard Computer</a>
		project. I didn't have the time to build a real version of his 8-bit computer, so I wrote
		<a href=https://github.com/tomnomnom/eater-cpu>an emulator</a> for it instead.
	</p>
</div>

<div class="container">
	<h2><a href=https://github.com/tomnomnom/hacks>hacks</a></h2>
	<p>
		Not a single project, but my <a href=https://github.com/tomnomnom/hacks>hacks</a> repo contains ideas
		I'm trying out, simple tools I'm not quite sure about yet, and one-off scripts that I might need again
		one day. Several of my other projects started in this repo and graduated to their own repository once
		I decided they were useful enough to warrant it.
	</p>
</div>

{{template "footer"}}
